// Code generated by go-swagger; DO NOT EDIT.

package notify

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewNotifyEmailParams creates a new NotifyEmailParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewNotifyEmailParams() *NotifyEmailParams {
	return &NotifyEmailParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewNotifyEmailParamsWithTimeout creates a new NotifyEmailParams object
// with the ability to set a timeout on a request.
func NewNotifyEmailParamsWithTimeout(timeout time.Duration) *NotifyEmailParams {
	return &NotifyEmailParams{
		timeout: timeout,
	}
}

// NewNotifyEmailParamsWithContext creates a new NotifyEmailParams object
// with the ability to set a context for a request.
func NewNotifyEmailParamsWithContext(ctx context.Context) *NotifyEmailParams {
	return &NotifyEmailParams{
		Context: ctx,
	}
}

// NewNotifyEmailParamsWithHTTPClient creates a new NotifyEmailParams object
// with the ability to set a custom HTTPClient for a request.
func NewNotifyEmailParamsWithHTTPClient(client *http.Client) *NotifyEmailParams {
	return &NotifyEmailParams{
		HTTPClient: client,
	}
}

/*
NotifyEmailParams contains all the parameters to send to the API endpoint

	for the notify email operation.

	Typically these are written to a http.Request.
*/
type NotifyEmailParams struct {

	// Attachment.
	Attachment runtime.NamedReadCloser

	/* Subject.

	   Тема сообщения
	*/
	Subject string

	// Text.
	Text string

	/* To.

	   Адрес получателя
	*/
	To string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the notify email params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NotifyEmailParams) WithDefaults() *NotifyEmailParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the notify email params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *NotifyEmailParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the notify email params
func (o *NotifyEmailParams) WithTimeout(timeout time.Duration) *NotifyEmailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the notify email params
func (o *NotifyEmailParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the notify email params
func (o *NotifyEmailParams) WithContext(ctx context.Context) *NotifyEmailParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the notify email params
func (o *NotifyEmailParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the notify email params
func (o *NotifyEmailParams) WithHTTPClient(client *http.Client) *NotifyEmailParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the notify email params
func (o *NotifyEmailParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttachment adds the attachment to the notify email params
func (o *NotifyEmailParams) WithAttachment(attachment runtime.NamedReadCloser) *NotifyEmailParams {
	o.SetAttachment(attachment)
	return o
}

// SetAttachment adds the attachment to the notify email params
func (o *NotifyEmailParams) SetAttachment(attachment runtime.NamedReadCloser) {
	o.Attachment = attachment
}

// WithSubject adds the subject to the notify email params
func (o *NotifyEmailParams) WithSubject(subject string) *NotifyEmailParams {
	o.SetSubject(subject)
	return o
}

// SetSubject adds the subject to the notify email params
func (o *NotifyEmailParams) SetSubject(subject string) {
	o.Subject = subject
}

// WithText adds the text to the notify email params
func (o *NotifyEmailParams) WithText(text string) *NotifyEmailParams {
	o.SetText(text)
	return o
}

// SetText adds the text to the notify email params
func (o *NotifyEmailParams) SetText(text string) {
	o.Text = text
}

// WithTo adds the to to the notify email params
func (o *NotifyEmailParams) WithTo(to string) *NotifyEmailParams {
	o.SetTo(to)
	return o
}

// SetTo adds the to to the notify email params
func (o *NotifyEmailParams) SetTo(to string) {
	o.To = to
}

// WriteToRequest writes these params to a swagger request
func (o *NotifyEmailParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Attachment != nil {

		if o.Attachment != nil {
			// form file param attachment
			if err := r.SetFileParam("attachment", o.Attachment); err != nil {
				return err
			}
		}
	}

	// form param subject
	frSubject := o.Subject
	fSubject := frSubject
	if fSubject != "" {
		if err := r.SetFormParam("subject", fSubject); err != nil {
			return err
		}
	}

	// form param text
	frText := o.Text
	fText := frText
	if fText != "" {
		if err := r.SetFormParam("text", fText); err != nil {
			return err
		}
	}

	// form param to
	frTo := o.To
	fTo := frTo
	if fTo != "" {
		if err := r.SetFormParam("to", fTo); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
