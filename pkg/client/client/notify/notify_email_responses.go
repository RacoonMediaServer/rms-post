// Code generated by go-swagger; DO NOT EDIT.

package notify

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// NotifyEmailReader is a Reader for the NotifyEmail structure.
type NotifyEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotifyEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotifyEmailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotifyEmailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNotifyEmailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNotifyEmailOK creates a NotifyEmailOK with default headers values
func NewNotifyEmailOK() *NotifyEmailOK {
	return &NotifyEmailOK{}
}

/*
NotifyEmailOK describes a response with status code 200, with default header values.

OK
*/
type NotifyEmailOK struct {
}

// IsSuccess returns true when this notify email o k response has a 2xx status code
func (o *NotifyEmailOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notify email o k response has a 3xx status code
func (o *NotifyEmailOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify email o k response has a 4xx status code
func (o *NotifyEmailOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this notify email o k response has a 5xx status code
func (o *NotifyEmailOK) IsServerError() bool {
	return false
}

// IsCode returns true when this notify email o k response a status code equal to that given
func (o *NotifyEmailOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the notify email o k response
func (o *NotifyEmailOK) Code() int {
	return 200
}

func (o *NotifyEmailOK) Error() string {
	return fmt.Sprintf("[POST /notify/email][%d] notifyEmailOK ", 200)
}

func (o *NotifyEmailOK) String() string {
	return fmt.Sprintf("[POST /notify/email][%d] notifyEmailOK ", 200)
}

func (o *NotifyEmailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotifyEmailBadRequest creates a NotifyEmailBadRequest with default headers values
func NewNotifyEmailBadRequest() *NotifyEmailBadRequest {
	return &NotifyEmailBadRequest{}
}

/*
NotifyEmailBadRequest describes a response with status code 400, with default header values.

Ошибка во входных параметрах
*/
type NotifyEmailBadRequest struct {
}

// IsSuccess returns true when this notify email bad request response has a 2xx status code
func (o *NotifyEmailBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notify email bad request response has a 3xx status code
func (o *NotifyEmailBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify email bad request response has a 4xx status code
func (o *NotifyEmailBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this notify email bad request response has a 5xx status code
func (o *NotifyEmailBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this notify email bad request response a status code equal to that given
func (o *NotifyEmailBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the notify email bad request response
func (o *NotifyEmailBadRequest) Code() int {
	return 400
}

func (o *NotifyEmailBadRequest) Error() string {
	return fmt.Sprintf("[POST /notify/email][%d] notifyEmailBadRequest ", 400)
}

func (o *NotifyEmailBadRequest) String() string {
	return fmt.Sprintf("[POST /notify/email][%d] notifyEmailBadRequest ", 400)
}

func (o *NotifyEmailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotifyEmailInternalServerError creates a NotifyEmailInternalServerError with default headers values
func NewNotifyEmailInternalServerError() *NotifyEmailInternalServerError {
	return &NotifyEmailInternalServerError{}
}

/*
NotifyEmailInternalServerError describes a response with status code 500, with default header values.

Ошибка на стороне сервера
*/
type NotifyEmailInternalServerError struct {
}

// IsSuccess returns true when this notify email internal server error response has a 2xx status code
func (o *NotifyEmailInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notify email internal server error response has a 3xx status code
func (o *NotifyEmailInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify email internal server error response has a 4xx status code
func (o *NotifyEmailInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this notify email internal server error response has a 5xx status code
func (o *NotifyEmailInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this notify email internal server error response a status code equal to that given
func (o *NotifyEmailInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the notify email internal server error response
func (o *NotifyEmailInternalServerError) Code() int {
	return 500
}

func (o *NotifyEmailInternalServerError) Error() string {
	return fmt.Sprintf("[POST /notify/email][%d] notifyEmailInternalServerError ", 500)
}

func (o *NotifyEmailInternalServerError) String() string {
	return fmt.Sprintf("[POST /notify/email][%d] notifyEmailInternalServerError ", 500)
}

func (o *NotifyEmailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
