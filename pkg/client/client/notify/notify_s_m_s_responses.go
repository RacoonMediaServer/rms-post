// Code generated by go-swagger; DO NOT EDIT.

package notify

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// NotifySMSReader is a Reader for the NotifySMS structure.
type NotifySMSReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotifySMSReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotifySMSOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotifySMSBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNotifySMSInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNotifySMSOK creates a NotifySMSOK with default headers values
func NewNotifySMSOK() *NotifySMSOK {
	return &NotifySMSOK{}
}

/*
NotifySMSOK describes a response with status code 200, with default header values.

OK
*/
type NotifySMSOK struct {
}

// IsSuccess returns true when this notify s m s o k response has a 2xx status code
func (o *NotifySMSOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notify s m s o k response has a 3xx status code
func (o *NotifySMSOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify s m s o k response has a 4xx status code
func (o *NotifySMSOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this notify s m s o k response has a 5xx status code
func (o *NotifySMSOK) IsServerError() bool {
	return false
}

// IsCode returns true when this notify s m s o k response a status code equal to that given
func (o *NotifySMSOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the notify s m s o k response
func (o *NotifySMSOK) Code() int {
	return 200
}

func (o *NotifySMSOK) Error() string {
	return fmt.Sprintf("[POST /notify/sms][%d] notifySMSOK ", 200)
}

func (o *NotifySMSOK) String() string {
	return fmt.Sprintf("[POST /notify/sms][%d] notifySMSOK ", 200)
}

func (o *NotifySMSOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotifySMSBadRequest creates a NotifySMSBadRequest with default headers values
func NewNotifySMSBadRequest() *NotifySMSBadRequest {
	return &NotifySMSBadRequest{}
}

/*
NotifySMSBadRequest describes a response with status code 400, with default header values.

Ошибка во входных параметрах
*/
type NotifySMSBadRequest struct {
}

// IsSuccess returns true when this notify s m s bad request response has a 2xx status code
func (o *NotifySMSBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notify s m s bad request response has a 3xx status code
func (o *NotifySMSBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify s m s bad request response has a 4xx status code
func (o *NotifySMSBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this notify s m s bad request response has a 5xx status code
func (o *NotifySMSBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this notify s m s bad request response a status code equal to that given
func (o *NotifySMSBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the notify s m s bad request response
func (o *NotifySMSBadRequest) Code() int {
	return 400
}

func (o *NotifySMSBadRequest) Error() string {
	return fmt.Sprintf("[POST /notify/sms][%d] notifySMSBadRequest ", 400)
}

func (o *NotifySMSBadRequest) String() string {
	return fmt.Sprintf("[POST /notify/sms][%d] notifySMSBadRequest ", 400)
}

func (o *NotifySMSBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotifySMSInternalServerError creates a NotifySMSInternalServerError with default headers values
func NewNotifySMSInternalServerError() *NotifySMSInternalServerError {
	return &NotifySMSInternalServerError{}
}

/*
NotifySMSInternalServerError describes a response with status code 500, with default header values.

Ошибка на стороне сервера
*/
type NotifySMSInternalServerError struct {
}

// IsSuccess returns true when this notify s m s internal server error response has a 2xx status code
func (o *NotifySMSInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notify s m s internal server error response has a 3xx status code
func (o *NotifySMSInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify s m s internal server error response has a 4xx status code
func (o *NotifySMSInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this notify s m s internal server error response has a 5xx status code
func (o *NotifySMSInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this notify s m s internal server error response a status code equal to that given
func (o *NotifySMSInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the notify s m s internal server error response
func (o *NotifySMSInternalServerError) Code() int {
	return 500
}

func (o *NotifySMSInternalServerError) Error() string {
	return fmt.Sprintf("[POST /notify/sms][%d] notifySMSInternalServerError ", 500)
}

func (o *NotifySMSInternalServerError) String() string {
	return fmt.Sprintf("[POST /notify/sms][%d] notifySMSInternalServerError ", 500)
}

func (o *NotifySMSInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
